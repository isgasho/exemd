language: rust

sudo: required

jdk:
  - openjdk8
python:
  - "3.4"
rust:
  - stable
  - nightly
node_js:
  - 12

os:
  - linux
  - osx

script:
  - cargo build
  - cargo test

virtualenv:
  system_site_packages: true

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

before_install:
  # adding $HOME/.sdkman to cache would create an empty directory, which interferes with the initial installation
  - "[[ -d /home/travis/.sdkman/ ]] && [[ -d /home/travis/.sdkman/bin/ ]] || rm -rf /home/travis/.sdkman/"
  - curl -sL https://get.sdkman.io | bash
  - echo sdkman_auto_answer=true > $HOME/.sdkman/etc/config
  - echo sdkman_auto_selfupdate=true >> $HOME/.sdkman/etc/config
  - source "$HOME/.sdkman/bin/sdkman-init.sh"

install:
  - sdk install kotlin
#
#after_success: |
#  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
#  tar xzf master.tar.gz &&
#  cd kcov-master &&
#  mkdir build &&
#  cd build &&
#  cmake .. &&
#  make &&
#  make install DESTDIR=../../kcov-build &&
#  cd ../.. &&
#  rm -rf kcov-master &&
#  for file in target/debug/exemd-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
#  bash <(curl -s https://codecov.io/bash) &&
#  echo "Uploaded code coverage"

notifications:
  email: false
